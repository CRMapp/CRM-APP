//
//  AddEditContactHelper.m
//  CRM
//
//  Created by Narendra Verma on 12/06/13.
//  Copyright (c) 2013 Sheetal's iMac. All rights reserved.
//

#import "AddEditContactHelper.h"

#import "AddNewContectDetailCell.h"
//Classes

#import "AllPhone.h"
#import "AllEmail.h"
#import "AllAddress.h"

#import "MyAddressBook.h"

#import "AddNewContectDetailCell.h"
@implementation AddEditContactHelper

/*
 Method : setPhoneNumber:
 @prams addObj object from which we require to get data
 
 return a dict with phone numbers
 */
+(NSDictionary *)setPhoneNumbers:(MyAddressBook*)addObj
{
	NSMutableDictionary * dictEdit = [NSMutableDictionary dictionaryWithCapacity:0];
	
	for (AllPhone * aPhone in [[addObj relAllPhone] allObjects])
	{
		if (aPhone.phone)
		{
			[dictEdit setValue:aPhone.phone forKey:k_TextFiled_PhoneNum];
		}
		else if (aPhone.mobile)
		{
			[dictEdit setValue:aPhone.mobile forKey:k_TextFiled_MobileNum];
		}
		else if (aPhone.home)
		{
			[dictEdit setValue:aPhone.home forKey:k_TextFiled_HomeNum];
		}
		else if (aPhone.workFax)
		{
			[dictEdit setValue:aPhone.workFax forKey:k_TextFiled_FaxNum];
		}
//		else if (aPhone.work)
//		{
//			[dictEdit setValue:aPhone.work forKey:k_TextFiled_WorkNum];
//		}
	}
	
	return dictEdit;
}
/*
 Method : setEmailsInDict:
 @prams addObj object from which we require to get data
 
 return a dict with work Email, if we don't have work email then any of the email exist
 */

+(NSString *)setEmailsInDict:(MyAddressBook*)addObj
{
	NSString * emailStr = @"";
	
	//our main focus is on the work email only
	for (AllEmail * emails in [[addObj relEmails] allObjects])
	{
		if (emails.workURL)
		{
			emailStr = [NSString stringWithString:[emails.workURL lowercaseString]];
			break;
		}
	}
	
	//if we haven't got any work email then any related email
	for (AllEmail * emails in [[addObj relEmails] allObjects])
	{
		if (emails.homeURL && emailStr.length == 0)
		{
			emailStr = [NSString stringWithString:[emails.homeURL lowercaseString]];
			break;
		}
		else if (emails.other && emailStr.length == 0)
		{
			emailStr = [NSString stringWithString:[emails.other lowercaseString]];
			break;
		}
	}
	
	
	return emailStr;
}

+(AllAddress*)getWorkAddress:(MyAddressBook *)addObj
{
	//our main focus is on the work address only
	for (AllAddress * allAdd in [[addObj relAllAddress] allObjects])
	{
		if ([allAdd.addressType rangeOfString:@"work" options:NSCaseInsensitiveSearch].length)
		{
			return allAdd;
			
		}
	}
	
	//if we haven't got any work address then any address
	for (AllAddress * allAdd in [[addObj relAllAddress] allObjects])
	{
		return allAdd;
	}
	
	return nil;
}

+(AllEmail *)getWorkEmail:(MyAddressBook *)addressBook
{
	for (AllEmail * emails in [[addressBook relEmails] allObjects])
	{
		if (emails.workURL)
		{
			return emails;
		}
	}
	
	//else we send the zeroth object
	return [[addressBook.relEmails allObjects] objectAtIndex:0];
}

/*now the requirement for the editing mode
 
 first we need to check for the key in the phone array
 if that object exist
 
 that means we need to edit it 
 
 else
 
 we need to create a new phone object
 */


//[phone setPhone:[global.dictMyAddressBook valueForKey:k_TextFiled_PhoneNum]];				//Phone number
//			[phone setMobile:[global.dictMyAddressBook valueForKey:k_TextFiled_MobileNum]];				//Mobile number
//			[phone setHome:[global.dictMyAddressBook valueForKey:k_TextFiled_HomeNum]];					//Home number
//			[phone setWorkFax:[global.dictMyAddressBook valueForKey:k_TextFiled_FaxNum]];

+(void)editPhoneNumber:(MyAddressBook*)address andMainDict:(NSDictionary *)dict andManageObjContext:(NSManagedObjectContext * )manageObj
{
    NSArray * arrAllPhone = [address.relAllPhone allObjects];
    
    
    //Phone Number
    if ([dict valueForKey:k_TextFiled_PhoneNum])
    {
        BOOL isPhoneFound = NO;
        //now search all objects for allPhone and find out if there is any phonenumber in phone filed
        for (AllPhone * phone in arrAllPhone)
        {
            if ([phone.phone length])
            {
                //that means we have a phone object
                phone.phone = [dict valueForKey:k_TextFiled_PhoneNum];
                isPhoneFound = YES;
                break;
            }
        }
        
        if (!isPhoneFound)
        {
            AllPhone * newPhone = [NSEntityDescription insertNewObjectForEntityForName:@"AllPhone" inManagedObjectContext:manageObj];
            newPhone.phone = [dict valueForKey:k_TextFiled_PhoneNum];
            [newPhone setRelMyAddressBook:address];
        }
    }
    
    //Mobile number
    if ([dict valueForKey:k_TextFiled_MobileNum])
    {
        BOOL isPhoneFound = NO;
        //now search all objects for allPhone and find out if there is any phonenumber in phone filed
        for (AllPhone * phone in arrAllPhone)
        {
            if ([phone.mobile length])
            {
                //that means we have a phone object
                phone.mobile = [dict valueForKey:k_TextFiled_MobileNum];
                isPhoneFound = YES;
                break;
            }
        }
        
        if (!isPhoneFound)
        {
            AllPhone * newPhone = [NSEntityDescription insertNewObjectForEntityForName:@"AllPhone" inManagedObjectContext:manageObj];
            newPhone.mobile = [dict valueForKey:k_TextFiled_MobileNum];
            [newPhone setRelMyAddressBook:address];
        }
    }
    
    //Home Number
    if ([dict valueForKey:k_TextFiled_HomeNum])
    {
        BOOL isPhoneFound = NO;
        //now search all objects for allPhone and find out if there is any phonenumber in phone filed
        for (AllPhone * phone in arrAllPhone)
        {
            if ([phone.home length])
            {
                //that means we have a phone object
                phone.home = [dict valueForKey:k_TextFiled_HomeNum];
                isPhoneFound = YES;
                break;
            }
        }
        
        if (!isPhoneFound)
        {
            AllPhone * newPhone = [NSEntityDescription insertNewObjectForEntityForName:@"AllPhone" inManagedObjectContext:manageObj];
            newPhone.home = [dict valueForKey:k_TextFiled_HomeNum];
            [newPhone setRelMyAddressBook:address];
        }
    }
    
    //Fax Number
    if ([dict valueForKey:k_TextFiled_FaxNum])
    {
        BOOL isPhoneFound = NO;
        //now search all objects for allPhone and find out if there is any phonenumber in phone filed
        for (AllPhone * phone in arrAllPhone)
        {
            if ([phone.workFax length])
            {
                //that means we have a phone object
                phone.workFax = [dict valueForKey:k_TextFiled_FaxNum];
                isPhoneFound = YES;
                break;
            }
        }
        
        if (!isPhoneFound)
        {
            AllPhone * newPhone = [NSEntityDescription insertNewObjectForEntityForName:@"AllPhone" inManagedObjectContext:manageObj];
            newPhone.workFax = [dict valueForKey:k_TextFiled_FaxNum];
            [newPhone setRelMyAddressBook:address];
        }
    }

    
}
@end
